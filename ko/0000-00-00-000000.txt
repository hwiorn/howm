= <<< %menu%
 %"e"[기억] %"c"[새 메모] %"D"[복제] 검색(%"s"[문자열] %"g"[정규표현식] %"o"[Occur]) %":"[어제] %"."[오늘]
 %"a"[전체] %"l"[최근] %"A"[주변] %"h"[기록] %"y"[일정] %"t"[할일] %"b"[버퍼] %"x"[마크] %"w"[랜덤] [설정]
 %"K"[제목↑] [이름↑] %"d"[날짜↓] %"T"[시간↓] %"i"[키워드↓] %"r"[업데이트] %"R"[메뉴 업데이트] [메뉴 편집] [모두 삭제]
-------------------------------------
[스케쥴, Todo] -- @스케쥴, !데드라인을 %sdays 일 후까지 표시.
!데드라인, +할일, -리마인더, ~보류를 상위 %tnum 개까지 표시.
%reminder
-------------------------------------
최근메모
%recent
-------------------------------------
랜덤 선택 (필요 없으면 [메뉴 편집]에서 삭제하세요)
%random
-------------------------------------

일정(스케쥴), 할일(todo) 형식:
[2002-10-21]@1  일정 -- (일정표에 표시. 만약 @3이면 3일간의 일정, 즉 23일까지의 의미)
[2002-10-21]+7  할일 -- 지정일 이후 7일 동안 서서히 떠오름
[2002-10-21]!7  마감일(데드라인) -- 지정일 7일 전부터 서서히 떠오르고 지정일 이후 계속 떠오름
[2002-10-21]−1  리마인더 -- 지정일에 떠오르고 이후 1일 동안 서서히 사라짐
[2002-10-21]~30 보류 -- 지정일에 떠오르고 이후 30일 주기로 떠오르고 사라짐
[2002-10-21].   완료 -- 항상 바닥
(기호 뒤의 숫자는 기본값)

기억법
・ 일정은 해당 날짜에 연결되어 있으므로 @(at)
・ 메모는 사라지므로 -
・ 할 일은 떠오르므로 +
・ 마감일은 해당 날짜에 주의해야 하므로 !
・ 보류는 파도처럼 오르내리므로 ~
・ 완료는 끝이므로 .

-------------------------------------

[○○]는 무엇인가?                    >>> %버튼 설명%
이 메뉴 자체를 편집할 수 있습니다   >>> %메뉴 편집%
메모가 많아지면…                    >>> %속도 향상%

= <<< %버튼 설명%

◆ 생성

[새 메모] → 새로운 메모 생성 (현재 영역이 제목)
[복제] → 현재 메모 복제 (주소록 템플릿 등의 용도)

◆ 목록

[전체] → 모든 메모 목록
[최근] → 최근 메모 연속 표시
[주변] → 주변 메모 (보고 있던 메모를 중심으로 모든 메모를 날짜순으로 나열)
* 대상 파일을 (편집 모드로) 연 상태에서 메뉴를 호출
[기록] → 검색 기록
[일정] → 일정표
[할일] → 할 일 목록

◆ 검색

[정규표현식] → 정규표현식 검색
* 기본적으로 대소문자 구분 없음
  * "Wiki"처럼 대문자를 명시적으로 지정하면 구분
[문자열] → 키워드 자동 입력 후 문자열 검색
[오늘] → 오늘의 메모
[어제] → 어제의 메모

◆ 편집: 대상 파일을 (편집 모드로) 연 상태에서 메뉴를 호출

[업데이트] → 밑줄 새로 그리기
[키워드↓] → 키워드 자동 입력 후 붙여넣기
* 팁: M-v로 후보 목록으로 이동 후 migemo 검색을 하면 편리

[날짜↓] → 오늘의 날짜 [yyyy-mm-dd] 붙여넣기
[시간↓] → 오늘의 날짜 및 시간 [yyyy-mm-dd HH:MM] 붙여넣기
[제목↑] → 현재 메모의 제목을 kill ring으로 (C-y로 붙여넣기)
* 제목이 없으면 파일명
[이름↑] → 파일명을 kill ring으로

◆ 특별

[메뉴 업데이트] → 메뉴의 일정표 등 업데이트
[메뉴 편집] → 메뉴 편집
[모두 삭제] → howm 모드의 모든 버퍼 삭제 (저장되지 않은 것은 제외)
[랜덤] → 랜덤 링크를 따라 자동 열람. C-g로 중지.

= <<< %속도 향상%

메모가 많아져 검색이 느려질 경우, 속도 향상을 위한 옵션 설정을 고려하세요.

가장 효과적인 방법은 검색에 grep 명령을 사용하는 것입니다.
Unix 계열의 표준 환경이라면 대부분 문제가 없을 것입니다.
그 외의 환경에서는 준비가 필요할 수 있습니다.

각 환경에 맞는 구체적인 방법은… 정보를 기다립니다.
・https://howm.osdn.jp/cgi-bin/hiki/hiki.cgi?Windows
・https://howm.osdn.jp/cgi-bin/hiki/hiki.cgi?LinuxZaurus

grep 사용 설정을 위해,
  M-x customize-variable howm-view-use-grep
을 입력하거나 초기화 파일(.emacs 등)에 직접
  (setq howm-view-use-grep t)
를 작성하거나, 이 화면에서「%"!」를 누르세요." %| %eval%(customize-variable 'howm-view-use-grep) %|

다른 옵션에 대해서는,
[설정]에서「Howm Efficiency」항목을 참조하세요.

= <<< %메뉴 편집%

[메뉴 편집]에서 이 메뉴를 편집
[메뉴 업데이트]에서 이 메뉴를 업데이트
--------------------------------------------------------

메뉴 작성법
([메뉴 편집]에서 리턴을 눌러 원본 파일을 읽으세요)

◆ 기본
보면 알겠지만,
・[○○]로 작성된 부분이 버튼
・％reminder로 작성된 부분이 일정표와 할 일 목록
・％recent로 작성된 부분이 최근 메모 목록
・％random으로 작성된 부분이 랜덤 메모 목록
입니다.
어디에 작성해도 기능하므로, 마음껏 배치하고 사용하세요.
자주 사용하는 파일이나 이동 링크도 작성해 두면 편리합니다.
(예) file:///etc/services   >>> wiki

◆ 단축키
%"hoge"[전체]
이렇게 작성하면, "hoge[전체]"로 표시되고, 키 h로 전체를 실행
(정확히는, (1) 닫힘 "으로 이동 (2) 다음 밑줄로 이동 (3) action-lock 발동)
%"fuga%" ← 이렇게 마지막에 %를 붙이면, 키 f로 해당 위치로 커서 이동

◆ lisper를 위한

・표시
%here%howm-congrats-count  ← 변수 howm-congrats-count의 값을 삽입
%here%(howm-menu-search "검색")
↑(...)의 결과(“검색”의 검색 결과)를 삽입
※ 다만, 사용하는 함수는 등록이 필요 (안전 때문에)
(setq howm-menu-allow (append '(foo bar) howm-menu-allow)) ;; foo와 bar를 허용

・동작
S식을 평가: %eval%(message (buffer-name))
함수를 call-interactively: %call%find-file
※ 모두 메뉴를 호출하기 전의 버퍼에서 평가됩니다

◆ 숨기기
「％|」로 작성하면, 보기, 숨기기를 토글.
이렇게 → 보임%|안 보임%|가시%|불가시…행 끝까지
(행 끝이 불가시일 경우, 개행도 사라집니다)

◆ 다중 메뉴
"%○○%"에 대한 링크는, "<<< %○○%"를 메뉴 모드로 엽니다: >>> %menu%
새 메뉴를 추가하고 싶을 때는 [[%menu%]]가 더 편리할 것입니다 (자동 생성되므로)
지정 파일을 메뉴 모드로 열기: %eval%(howm-menu-open "00000000-000000.txt")
